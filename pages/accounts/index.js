import Head from "next/head"
import { useEffect, useState } from "react";
import { Button, Card, Col, Layout, Row, Statistic, Table, Tag, message } from "antd";
import Image from "next/image";
import { useRouter } from "next/router";
import {
    ArrowLeftOutlined
} from '@ant-design/icons';
import moment from "moment";
import { getAuthToken } from "../../utils/authUtils";
import { logout, verifyUser } from "../../services/auth";
import { getReciepts } from "../../services/accounts";

const { Content } = Layout;
const expenseColumns = [
    {
        title: 'Fee',
        dataIndex: 'fee',
        key: 'fee',
    },
    {
        title: 'Amount',
        dataIndex: 'amount',
        key: 'amount',
    },
];

const Profile = () => {
    const router = useRouter();

    const [userDetails, setUserDetails] = useState(null);
    const [recieptsData, setRecieptsData] = useState([]);

    const goBack = () => {
        router.push("/dashboard");
    }

    const handleShowReciept = (recieptId) => {
        router.push("/accounts/" + recieptId);
    }

    useEffect(() => {
        const user = getAuthToken();
        if (!user) {
            message.error("User acess denied!");
            logout();
            router.push("/");
        } else {
            verifyUser(user).then((response) => {
                setUserDetails(response.data)
            }).catch(() => {
                message.error("User Acess expired!")
                logout();
                router.push("/");
            })
        }
    }, [])

    useEffect(() => {
        if (userDetails && userDetails.Reciepts && userDetails.Reciepts.length > 0) {
            getReciepts(userDetails.Reciepts)
                .then(response => {
                    setRecieptsData(response.data)
                })
                .catch(err => { })
        }
    }, [userDetails])

    return (
        <Layout>
            <Head>
                <title>Sunrise MGMT</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Content className="p-6">
                <Button onClick={goBack} type="link" className="mb-4 text-left text-[#555555]"><ArrowLeftOutlined /> Go Back</Button>
                <div className="flex flex-col w-full md:max-w-md md:mx-auto">
                    <div className='flex justify-center mb-6'>
                        <Image width={200} height={200} src="/logo.png" alt="logo" />
                    </div>
                    <h1 className="font-semibold text-4xl text-center mb-8">Accounts </h1>
                    {
                        userDetails ? <Table
                            columns={expenseColumns}
                            pagination={false}
                            className="mb-4"
                            size="small"
                            dataSource={[
                                { key: "Lawazam 2023", fee: "Lawazam 2023", amount: userDetails["Lawazam 2023"] },
                                { key: "Uniform Fees", fee: "Uniform Fees", amount: userDetails["Uniform Fees"] },
                                { key: "Ziyafat Amount", fee: "Ziyafat Amount", amount: userDetails["Ziyafat Amount"] },
                            ]}
                        /> : null
                    }
                    {
                        userDetails ?
                            <Card>
                                <div className="flex flex-col">
                                    <Row gutter={[24, 24]}>
                                        <Col xs={24}>
                                            <Statistic
                                                title="Total"
                                                value={userDetails["To Be Recieved"]}
                                                prefix="₹"
                                            />
                                        </Col>
                                        <Col xs={12}>
                                            <Statistic
                                                title="Recieved"
                                                value={userDetails["Total Recieved"]}
                                                valueStyle={{ color: '#3f8600' }}
                                                prefix="₹"
                                            />
                                        </Col>
                                        <Col xs={12}>
                                            <Statistic
                                                title="Pending"
                                                value={userDetails["To Be collected"]}
                                                valueStyle={{ color: '#cf1322' }}
                                                prefix="₹"
                                            />
                                        </Col>
                                    </Row>

                                </div>
                            </Card>
                            : null
                    }
                    <h1 className="font-semibold text-2xl mt-8 mb-4">Reciepts: </h1>

                    {
                        recieptsData.map(val => (
                            <Card key={val.id} className="mb-4">
                                <Row gutter={[16, 16]}>
                                    <Col xs={12}>
                                        {"Amount : ₹" + val.Amount}
                                    </Col>
                                    <Col xs={12}>
                                        <p className="text-right">
                                            {moment(val.Date).format("DD-MM-YYYY")}
                                        </p>
                                    </Col>

                                    <Col xs={24}>
                                        <span className="mr-2">Purpose : </span>
                                        <Tag>{val.Title}</Tag>
                                    </Col>
                                    <Col className="text-center" xs={24}>
                                        <Button onClick={() => handleShowReciept(val.id)} size="small" type="primary">view reciept</Button>
                                    </Col>
                                </Row>
                            </Card>
                        ))
                    }

                </div>
            </Content>

        </Layout>
    )
}

export default Profile